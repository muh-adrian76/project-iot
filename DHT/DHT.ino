/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/8e64d1ec-e57d-4323-8320-6c48c87acbef 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudTemperatureSensor dht_1_temp;
  CloudTemperatureSensor dht_2_temp;
  CloudRelativeHumidity dht_1_humi;
  CloudRelativeHumidity dht_2_humi;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "DHT.h"
#define DHT_A 2
#define DHT_B 4
#define DHTTYPE DHT11
DHT dht1(DHT_A, DHTTYPE);
DHT dht2(DHT_B, DHTTYPE);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();
  dht1.begin();
  dht2.begin();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  readDHT_A();
  readDHT_B();
  
}

void readDHT_A() {
  float t1 = dht1.readTemperature();
  float h1 = dht1.readHumidity();
  
  dht_1_temp = t1;
  dht_1_humi = h1;
  
  if (isnan(t1) && isnan(h1)) {
    Serial.println("Gagal membaca sensor!");
  }
  else {
    Serial.print("Data suhu sensor pertama: "); Serial.print(dht_1_temp); Serial.println("°C");
    Serial.print("Data kelembaban sensor pertama: "); Serial.print(dht_1_humi); Serial.println("%");
    delay(1000);
  }
}

void readDHT_B() {
  float t2 = dht2.readTemperature();
  float h2 = dht2.readHumidity();
  
  dht_2_temp = t2;
  dht_2_humi = h2;
  
  if (isnan(t2) && isnan(h2)) {
    Serial.println("Gagal membaca sensor!");
  }
  else {
    Serial.print("Data suhu sensor pertama: "); Serial.print(dht_2_temp); Serial.println("°C");
    Serial.print("Data kelembaban sensor pertama: "); Serial.print(dht_2_humi); Serial.println("%");
    delay(1000);
  }
}
